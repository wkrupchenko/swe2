<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

<!--
	WICHTIG: In settings.xml darf es *KEIN* Profile "oracle" geben, das dort aktiviert ist !!!

	Aufrufe [-p : Profile]:
	1) Oracle mit Testdaten laden und Flat-XML exportieren
		 mvn -Poracle test
	2) Arquillian-Tests
		 mvn test
	3) Projekt-Doku generieren
		 mvn -DskipTests site
		 mvn -DskipTests -o site				// -o : offline

	Aufraeumen:
	4) Verzeichnis "target" loeschen
		 mvn clean
	5) User und Tabellen in Oracle loeschen
		 mvn -Poracle clean
	
	Qualitaetssicherung mit FindBugs, Checkstyle und PMD (fuer Jenkins in SWE-2)
	6)   mvn -DskipTests findbugs:findbugs checkstyle:checkstyle pmd:pmd

	(Un-) Deployment nur mit Maven und ohne Eclipse/WTP (bei Download-Problemen in Eclipse und fuer JMeter-Tests in SWE-2)
	7) Deployment in einen laufenden JBoss
		 mvn -DskipTests package jboss-as:deploy
	8) Undeployment
		 mvn -DskipTests jboss-as:undeploy

	Lasttests mit JMeter (in SWE-2):
	9) JMeter-Tests starten
         mvn -Pjmeter -DskipTests verify
	
	RESTful Web Service (optional in SWE-1 und SWE-2)
	10) XML Schema generieren
	     mvn -Prestgen process-classes
    11) Clientseitige Domain-Klassen mit JAXB-Annotationen aus dem generierten XML-Schema generieren
		 mvn -Prestgen generate-test-sources

	AbhÃ¤ngigkeiten anzeigen
	12)   mvn dependency:tree
	
	Versionsnummern auf Aktualitaet pruefen
	13) JARs ueberpruefen
	      mvn versions:display-dependency-updates
	14) Plugins ueberpruefen
	      mvn versions:display-plugin-updates
	      
	Tests mit Selenium und JBehave
	15)   mvn -Pjbehave test

	Properties aus settings.xml:
	- admin.oracle.password		Passwort des Administrators "SYSTEN" von Oracle
	- user.oracle.password		Passwort des Anwendungs-Users von Oracle
-->

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.shop</groupId>
	<artifactId>shop</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>shop</name>
	
	<url>http://www.iwi.hs-karlsruhe.de</url>
	<inceptionYear>2009</inceptionYear>
	<description>Web-Projekt mit Integrationstests mit Arquillian</description>
	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>
	
	<scm>
		<developerConnection>scm:git:http://www.iwi.hs-karlsruhe.de/git/swa02.git</developerConnection>
		<url>http://www.iwi.hs-karlsruhe.de/git/swa02.git</url>
	</scm>
	
	<issueManagement>
		<system>Redmine</system>
		<url>http://iwi-w-vm-sw01.hs-karlsruhe.de/redmine/projects/swa02</url>
	</issueManagement>
	
	<ciManagement>
		<system>Jenkins</system>
		<url>http://localhost:9090</url>
	</ciManagement>
	
	<licenses>
		<license>
			<name>GNU General Public License (GPL)</name>
			<url>http://www.gnu.org/licenses/gpl-3.0.html</url>
		</license>
	</licenses>
	
	<organization>
		<name>Hochschule Karlsruhe</name>
		<url>http://www.hs-karlsruhe.de</url>
	</organization>
	
	<developers>
		<developer>
			<id>Juergen.Zimmermann</id>
			<name>J&#252;rgen Zimmermann</name>
			<email>Juergen.Zimmermann@HS-Karlsruhe.de</email>
			<url>http://www.iwi.hs-karlsruhe.de</url>
			<organization>Hochschule Karlsruhe</organization>
			<organizationUrl>http://www.iwi.hs-karlsruhe.de</organizationUrl>
			<roles>
				<role>Dozent</role>
			</roles>
			<timezone>+1</timezone>     <!-- relativ zu GMT -->
		</developer>
		<developer>
			<id>Ingo.Glaser</id>
			<name>Ingo Glaser</name>
			<email>glin1011@HS-Karlsruhe.de</email>
			<url>http://www.iwi.hs-karlsruhe.de</url>
			<organization>Hochschule Karlsruhe</organization>
			<organizationUrl>http://www.iwi.hs-karlsruhe.de</organizationUrl>
			<roles>
				<role>Student</role>
			</roles>
			<timezone>+1</timezone>     <!-- relativ zu GMT -->
		</developer>
		<developer>
			<id>amiran-goguadze</id>
			<name>Amiran Goguadze</name>
			<email>goam1011@HS-Karlsruhe.de</email>
			<url>http://www.iwi.hs-karlsruhe.de</url>
			<organization>Hochschule Karlsruhe</organization>
			<organizationUrl>http://www.iwi.hs-karlsruhe.de</organizationUrl>
			<roles>
				<role>Student</role>
			</roles>
			<timezone>+1</timezone>     <!-- relativ zu GMT -->
		</developer>
		<developer>
			<id>v.krupchenko</id>
			<name>Vladyslav Krupchenko</name>
			<email>krvl011@HS-Karlsruhe.de</email>
			<url>http://www.iwi.hs-karlsruhe.de</url>
			<organization>Hochschule Karslsruhe</organization>
			<organizationUrl>http://www.iwi.hs-karlsruhe.de</organizationUrl>
			<roles>
				<role>Student</role>
			</roles>
			<timezone>+1</timezone>     <!-- relativ zu GMT -->
		</developer>
	</developers>

	<properties>
		<user.oracle>shop</user.oracle>
		<sequence.start>5000</sequence.start>
		<sqlldr.userid>${user.oracle}/${user.oracle.password}</sqlldr.userid>
		<!--
		<sqlldr.userid>${user.oracle}/${user.oracle.password}@XE</sqlldr.userid>
		-->
		
		<sqlsrc.dir.oracle>src/main/resources/oracle</sqlsrc.dir.oracle>
		<test.dir.oracle>src/test/resources/oracle</test.dir.oracle>

		<datasets.dir>${basedir}/src/test/resources/datasets</datasets.dir>

		<!-- Klassen fuer Generierung des Metamodel gemaess JPA -->
		<jpamodelgen.domainklassen>**/domain/*.java</jpamodelgen.domainklassen>
		
		<testklassen>**/*Test.java</testklassen>
		<surefire.argLine>-Xms256m -Xmx512m -XX:MaxPermSize=512m -Djava.util.logging.config.file=${basedir}\src\test\resources\logging.properties</surefire.argLine>
		
		<findBugs.maxHeap>768</findBugs.maxHeap>
		<javadoc.minmemory>128m</javadoc.minmemory>
		<javadoc.maxmemory>1g</javadoc.maxmemory>
		
		<!-- Stories fuer JBehave -->
		<stories>**/stories/S*.java</stories>

		<arquillian.managedOrRemote>managed</arquillian.managedOrRemote>
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
		<compiler.sourceEncoding>ISO-8859-1</compiler.sourceEncoding>
				
		<!-- Versionsnummern fuer verwendete Software -->
		<maven.version>3.0.4</maven.version>
		<java.version>1.7</java.version>
		<java.minor.version>1.7.0-07</java.minor.version>
		
		<!--
		<shrinkwrap-resolver-bom.version>2.0.0-alpha-4</shrinkwrap-resolver-bom.version>
		<shrinkwrap-bom.version>1.1.0</shrinkwrap-bom.version>
		<shrinkwrap-bom.version>1.1.1-alpha-1</shrinkwrap-bom.version>
		<jboss.bom.version>1.0.0.Final</jboss.bom.version>
		-->
		
		<arquillian-bom.version>1.0.3.Final</arquillian-bom.version>
		<jboss-javaee-6.0.version>3.0.1.Final</jboss-javaee-6.0.version>
		<jboss.version>7.1.2.Final</jboss.version>
		<!--
		<jboss.version>7.1.3.Final</jboss.version>
		-->
		<hibernate-jpamodelgen.version>1.2.0.Final</hibernate-jpamodelgen.version>
		<hibernate-validator.version>4.3.0.Final</hibernate-validator.version>
		<hibernate-validator-annotation-processor.version>4.3.0.Final</hibernate-validator-annotation-processor.version>
		
		<!-- siehe %JBOSS_HOME%\modules -->
		<resteasy-bom.version>2.3.5.Final</resteasy-bom.version>
		<!--
		<resteasy-bom.version>3.0-beta-1</resteasy-bom.version>
		-->
		<jaxb.version>2.2.6</jaxb.version>
		<picketbox.version>4.0.13.Final</picketbox.version>
		<jboss-ejb3-ext-api.version>2.0.0</jboss-ejb3-ext-api.version>
		
		<seam-bom.version>3.1.0.Final</seam-bom.version>
		<prettyfaces-jsf2.version>3.3.3</prettyfaces-jsf2.version>
		<solder.version>3.1.1.Final</solder.version> <!-- JBoss 7.1.2 -->
		<richfaces-bom.version>4.3.0.20121024-M2</richfaces-bom.version>
		
		<junit.version>4.11-beta-1</junit.version>
		<dbunit.version>2.4.9</dbunit.version>
		
		<selenium.version>2.25.0</selenium.version>
		<jbehave.version>3.7.3</jbehave.version>
		<!--
		<jbehave.version>4.0-beta-1</jbehave.version>
		-->
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>
		
		<oracle.driver.version>11.2.0.2.0</oracle.driver.version>

		<!-- Versionsnummern fuer Maven-Plugins -->
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<maven-enforcer-plugin.version>1.1.1</maven-enforcer-plugin.version>
		<build-helper-maven-plugin.version>1.7</build-helper-maven-plugin.version>
		<maven-war-plugin.version>2.3</maven-war-plugin.version>
		<jboss-as-maven-plugin.version>7.1.1.Final</jboss-as-maven-plugin.version>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
		<maven-surefire-plugin.version>2.12.4</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>2.12.4</maven-surefire-report-plugin.version>
		<maven-project-info-reports-plugin.version>2.4</maven-project-info-reports-plugin.version>
		<taglist-maven-plugin>2.4</taglist-maven-plugin>
		<maven-site-plugin.version>3.2</maven-site-plugin.version>
		<maven-javadoc-plugin.version>2.9</maven-javadoc-plugin.version>
		<findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
		<maven-pmd-plugin.version>2.7.1</maven-pmd-plugin.version>
		<maven-checkstyle-plugin.version>2.9.1</maven-checkstyle-plugin.version>
		<versions-maven-plugin.version>1.3.1</versions-maven-plugin.version>
		
		<maven-clean-plugin.version>2.5</maven-clean-plugin.version>
		<maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
		<maven-jar-plugin.version>2.4</maven-jar-plugin.version>
		<maven-install-plugin.version>2.4</maven-install-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-dependency-plugin.version>2.5.1</maven-dependency-plugin.version>
		<maven-project-info-reports-plugin.version>2.6</maven-project-info-reports-plugin.version>
		<jmeter-maven-plugin.version>1.6.0</jmeter-maven-plugin.version>

		<sql-maven-plugin.version>1.5</sql-maven-plugin.version>
		<exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>
		<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
		<dbunit-maven-plugin.version>1.0-beta-3</dbunit-maven-plugin.version>
	</properties>
	
	<!-- Repositories, aus denen die benoetigte Software heruntergeladen werden kann -->
	<repositories>
		<repository>
			<id>jboss</id>
			<name>JBoss Maven 2 Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>java.net</id>
			<name>java.net Maven Repository</name>
			<url>https://maven.java.net/content/repositories/releases</url>
		</repository>
		<repository>
			<id>codehaus</id>
			<name>Codehaus Maven 2 Repository</name>
			<url>https://nexus.codehaus.org/content/repositories/releases</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>jboss</id>
			<name>JBoss Maven 2 Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>codehaus</id>
			<name>Codehaus Maven 2 Repository</name>
			<url>https://nexus.codehaus.org/content/repositories/releases</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!--
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${shrinkwrap-resolver-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
				https://issues.jboss.org/browse/SHRINKWRAP-389
				https://community.jboss.org/thread/204435
			<dependency>
				<groupId>org.jboss.shrinkwrap</groupId>
				<artifactId>shrinkwrap-bom</artifactId>
				<version>${shrinkwrap-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
            </dependency>
            <dependency>
	            <groupId>org.jboss.bom</groupId>
	            <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
	            <version>${jboss.bom.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
            </dependency>
			-->
			
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-bom</artifactId>
				<version>${resteasy-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>seam-bom</artifactId>
				<version>${seam-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${richfaces-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!--
		Verwendete Software in Form von .jar-Dateien: notwendig fuer Uebersetzung und zur Laufzeit
	-->
	<dependencies>
		<!-- Falls es beim Aufruf von "mvn test" Fehler wegen fehlender Artifakte gibt, dann einmalig den folgenden Abschnitt auskommentieren -->
		<!--
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<version>1.3.11.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.interceptor</groupId>
			<artifactId>jboss-interceptors-api_1.1_spec</artifactId>
			<version>1.0.0.Beta1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling</artifactId>
			<version>1.3.6.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1.8</version>
			<scope>provided</scope>
		</dependency>
		-->
		
		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-arquillian-container-${arquillian.managedOrRemote}</artifactId>
			<version>${jboss.version}</version>
			<scope>test</scope>
			
			<!-- TODO https://issues.jboss.org/browse/AS7-4782 -->
			<exclusions>
				<exclusion>
					<artifactId>org.jboss.logmanager</artifactId>
					<groupId>jboss-logmanager</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- TODO https://issues.jboss.org/browse/AS7-4782 -->
		<dependency>
			<groupId>org.jboss.logmanager</groupId>
			<artifactId>jboss-logmanager</artifactId>
			<version>1.3.2.Final</version><!--$NO-MVN-MAN-VER$-->
			<!--
			<version>1.4.0.Beta1</version>
			-->
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.shrinkwrap</groupId>
			<artifactId>shrinkwrap-impl-base</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.shrinkwrap.descriptors</groupId>
			<artifactId>shrinkwrap-descriptors-impl-jboss</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version><!--$NO-MVN-MAN-VER$-->
			<scope>provided</scope>
		</dependency>
				
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${hibernate-jpamodelgen.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html/validator-annotation-processor.html -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<version>${hibernate-validator-annotation-processor.version}</version>
			<scope>compile</scope>
		</dependency>	
		
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- TODO https://issues.jboss.org/browse/AS7-4782 -->
		<!--
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy-bom.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
		-->
		
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.solder</groupId>
			<artifactId>solder-api</artifactId>
			<version>${solder.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.jboss.solder</groupId>
			<artifactId>solder-impl</artifactId>
			<version>${solder.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<!--
			<version>1.0.0.Final</version>
			-->
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.el</groupId>
			<artifactId>jboss-el-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.seam.persistence</groupId>
			<artifactId>seam-persistence</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.seam.transaction</groupId>
			<artifactId>seam-transaction</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.seam.faces</groupId>
			<artifactId>seam-faces</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.seam.security</groupId>
			<artifactId>seam-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.seam.international</groupId>
			<artifactId>seam-international</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.ocpsoft</groupId>
			<artifactId>prettyfaces-jsf2</artifactId>
			<version>${prettyfaces-jsf2.version}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
			<groupId>org.picketlink.idm</groupId>
			<artifactId>picketlink-idm-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-api</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.richfaces.core</groupId>
			<artifactId>richfaces-core-impl</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-components-ui</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-runtime</artifactId>
		</dependency>
		
		<!-- org.jboss.ejb3.annotation.SecurityDomain -->
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-ext-api</artifactId>
			<version>${jboss-ejb3-ext-api.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.spec.javax.security.jacc</groupId>
			<artifactId>jboss-jacc-api_1.4_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- org.jboss.security.auth.spi.Util.createPasswordHash, org.jboss.security.client.SecurityClient -->
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>jbosssx</artifactId>
			<version>${picketbox.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>jbosssx-client</artifactId>
			<version>${picketbox.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>jboss-security-spi</artifactId>
			<version>${picketbox.version}</version>
			<scope>provided</scope>
		</dependency>
				
		<!-- org.jboss.as.controller.client.ModelControllerClient und org.jboss.dmr.ModelNode -->
		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-controller-client</artifactId>
			<version>${jboss.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version><!--$NO-MVN-MAN-VER$-->
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>${oracle.driver.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>${selenium.version}</version>
			<!--
			<scope>test</scope>
			-->
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium.version}</version>
			<!--
			<scope>test</scope>
			-->
		</dependency>
		
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium.version}</version>
			<!--
			<scope>test</scope>
			-->
		</dependency>
		
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<version>${jbehave.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-odf</artifactId>
			<version>${jbehave.version}</version>
			<!--
			<scope>test</scope>
			-->
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<defaultGoal>test-compile</defaultGoal>
		
		<finalName>${project.artifactId}</finalName>

		<pluginManagement>	
			<plugins>
				<!-- Nur zum Abspeichern der Konfiguration von M2E; nicht relevant fuer die Ausfuehrung von Maven -->
				<!-- http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<!-- https://docs.sonatype.org/display/M2ECLIPSE/Project+build+lifecycle+mapping -->
				<!-- http://stackoverflow.com/questions/6641532/org-eclipse-m2e-lifecycle-mapping -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[${maven-antrun-plugin.version},)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[${maven-enforcer-plugin.version},)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<configuration>
					<rules>
						<requireMavenVersion>
							<version>[${maven.version},)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<version>[${java.minor.version},)</version>
						</requireJavaVersion>
						<requireProperty>
							<property>env.JAVA_HOME</property>
							<message>"JAVA_HOME muss fuer den Java-Compiler gesetzt sein"</message>
						</requireProperty>
						<requireProperty>
							<property>env.JBOSS_HOME</property>
							<message>"JBOSS_HOME muss fuer die Arquillian-Tests gesetzt sein"</message>
						</requireProperty>
						<requirePluginVersions/>
						
						<!--
						<DependencyConvergence/>
						-->
					</rules>
				</configuration>

				<executions>
					<execution>
						<id>enforce-maven-environment</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
								
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<encoding>${compiler.sourceEncoding}</encoding>
							
					<!-- Generierung der Metamodel-Klassen fuer Criteria Queries -->
					<!-- http://docs.jboss.org/hibernate/jpamodelgen/1.2/reference/en-US/html_single -->
					<!-- http://in.relation.to/12805.lace -->
					<compilerArguments>
						<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
					</compilerArguments>
					
					<!-- http://relation.to/Bloggers/AMoreConciseWayToGenerateTheJPA2MetamodelInMaven -->
					<!-- https://community.jboss.org/en/tools/blog/2012/05/20/annotation-processing-support-in-m2e-or-m2e-apt-100-is-out -->
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>${hibernate-jpamodelgen.version}</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
				
				<executions>
					<execution>
						<id>run-annotation-processors-only</id>
						<phase>generate-sources</phase>
						<configuration>
							<compilerArgument>-proc:only</compilerArgument>
							<includes>
								<include>${jpamodelgen.domainklassen}</include>
							</includes>
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>      
					<execution> 
					<phase>process-sources</phase>
					<configuration>
						<sources>
							<source>${project.build.directory}/generated-sources/annotations</source>
						</sources>
					</configuration>
					<goals>
						<goal>add-source</goal>
					</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<!-- Maven erwartet web.xml: im Gegensatz zu Java EE 6 -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestEntries>
							<!-- org.jboss.resteasy.resteasy-jackson-provider -->
							<Dependencies>org.jboss.as.controller-client,org.jboss.dmr,com.google.guava,org.joda.time</Dependencies>
						</manifestEntries>
					</archive>
					<webResources>
						<resource>
							<directory>src/main/resources</directory>
							<excludes>
								<exclude>oracle/*.sql</exclude>
								<exclude>schema/*.xsd</exclude>
							</excludes>
						</resource>
					</webResources>
					<!-- von WEB-INF/lib ausschliessen -->
					<packagingExcludes>
						WEB-INF/lib/bcp*.jar,
						WEB-INF/lib/cglib-*.jar,
						WEB-INF/lib/commons-*.jar,
						WEB-INF/lib/guava-*.jar,
						WEB-INF/lib/hibernate-validator-*.jar,
						WEB-INF/lib/htmlunit-*.jar,
						WEB-INF/lib/http*.jar,
						WEB-INF/lib/jbehave-*.jar,
						WEB-INF/lib/jboss-*.jar,
						WEB-INF/lib/jcip-*.jar,
						WEB-INF/lib/jetty-*.jar,
						WEB-INF/lib/jgroups-*.jar,
						WEB-INF/lib/jna-*.jar,
						WEB-INF/lib/json-*.jar,
						WEB-INF/lib/jsr305-*.jar,
						WEB-INF/lib/log4j-*.jar,
						WEB-INF/lib/mx4j-*.jar,
						WEB-INF/lib/nekohtml-*.jar,
						WEB-INF/lib/netty-*.jar,
						WEB-INF/lib/odf*.jar,
						WEB-INF/lib/platform-*.jar,
						WEB-INF/lib/rhq-*.jar,
						WEB-INF/lib/selenium-*.jar,
						WEB-INF/lib/serializer-*.jar,
						WEB-INF/lib/servlet-api-*.jar,
						WEB-INF/lib/slf4j-*.jar,
						WEB-INF/lib/snakeyaml-*.jar,
						WEB-INF/lib/stax*.jar,
						WEB-INF/lib/webbit-*.jar,
						WEB-INF/lib/woodstox-*.jar,
						WEB-INF/lib/xalan-*.jar,
						WEB-INF/lib/xercesImpl-*.jar,
						WEB-INF/lib/xml-apis-*.jar
					</packagingExcludes>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>oracle/**</exclude>
					<exclude>schema/*</exclude>
				</excludes>
			</resource>
		</resources>
		
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>oracle/**</exclude>
					<exclude>datasets/*</exclude>
					<exclude>findbugs.xml</exclude>
					<exclude>checkstyle.xml</exclude>
					<exclude>pmd.xml</exclude>
					<exclude>hibernate.console.properties</exclude>
					<exclude>jboss-deployment-structure.xml</exclude>
					<exclude>rest/*</exclude>
					<exclude>logging.properties</exclude>
				</excludes>
			</testResource>
		</testResources>
	</build>
	
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<!-- Plugin fuer Querverweise -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven-jxr-plugin.version}</version>
					</plugin>
		
					<!-- Durchfuehren der Tests mit Arquillian und JUnit --> 
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
		    			<artifactId>maven-surefire-plugin</artifactId>
		    			<version>${maven-surefire-plugin.version}</version>
						
						<configuration>
							<argLine>${surefire.argLine}</argLine>
							<systemPropertyVariables>
								<url>jdbc:oracle:thin:@localhost:1521:XE</url>
								<user>${user.oracle}</user>
								<password>${user.oracle.password}</password>
							</systemPropertyVariables>
							<runOrder>alphabetical</runOrder>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<trimStackTrace>false</trimStackTrace>
							<printSummary>true</printSummary>
							<includes>
								<include>${testklassen}</include>
							</includes>
							<useFile>true</useFile>
						</configuration>
					</plugin>
					
					<!-- Testbericht erstellen -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>${maven-project-info-reports-plugin.version}</version>
					</plugin>
		
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven-surefire-report-plugin.version}</version>
						
						<configuration>
							<showSuccess>true</showSuccess>
							<inputEncoding>UTF-8</inputEncoding>
							<outputEncoding>UTF-8</outputEncoding>
						</configuration>
				
						<executions>
							<execution>
								<id>test-report</id>
								<phase>test</phase>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<!-- Deployment in den JBoss Appserver durch Maven:  mvn package jboss-as:deploy -->
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<version>${jboss-as-maven-plugin.version}</version>
					</plugin>
					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${findbugs-maven-plugin.version}</version>
						<configuration>
							<effort>Max</effort>
							<xmlOutput>true</xmlOutput>
							<findbugsXmlOutputDirectory>${project.build.directory}/site</findbugsXmlOutputDirectory>
							<maxHeap>${findBugs.maxHeap}</maxHeap>
							<excludeFilterFile>${basedir}/src/test/resources/findbugs.xml</excludeFilterFile>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven-pmd-plugin.version}</version>
						<configuration>
							<targetJdk>${java.version}</targetJdk>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<linkXref>true</linkXref>
							<includeTests>true</includeTests>
							<!-- 100 Tokens entsprechen 5-10 Zeilen Quellcode bzgl CPD = Copy-Paste-Detection -->
							<minimumTokens>100</minimumTokens>
							
							<rulesets>
								<!-- Konfigurationsdatei fuer PMD einschl. CPD -->
								<ruleset>/src/test/resources/pmd.xml</ruleset>
							</rulesets>
							<excludes>
								<exclude>**/UAgentInfo.java</exclude>
								<exclude>src/test/java/**/ObjectFactory.java</exclude>
							</excludes>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>
						
						<configuration>
							<configLocation>${basedir}/src/test/resources/checkstyle.xml</configLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<excludes>**/util/rest/*/*.java,**/UAgentInfo.java</excludes>
							<violationSeverity>warning</violationSeverity>
						</configuration>
					</plugin>

					<!-- Web-Site mit HTML-Seiten auf deutsch ("de") generieren -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven-site-plugin.version}</version>
						<configuration>
							<locales>de</locales>
							<outputEncoding>UTF-8</outputEncoding>
						
							<reportPlugins>
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-project-info-reports-plugin</artifactId>
									<version>${maven-project-info-reports-plugin.version}</version>
								</plugin>
					
								<plugin>
									<!-- Generierung der Web-Site -->
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-surefire-report-plugin</artifactId>
									<version>${maven-surefire-report-plugin.version}</version>
									
									<configuration>
										<showSuccess>true</showSuccess>
										<inputEncoding>UTF-8</inputEncoding>
										<outputEncoding>UTF-8</outputEncoding>
									</configuration>
								</plugin>
					
								<plugin>
									<!-- Generierung der Javadoc-Dokumentation -->
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-javadoc-plugin</artifactId>
									<version>${maven-javadoc-plugin.version}</version>
									<configuration>
										<minmemory>${javadoc.minmemory}</minmemory>
										<maxmemory>${javadoc.maxmemory}</maxmemory>
										
										<!-- Javadoc mit externen Quellen verknuepfen (dauert sehr lange!) -->
										<!--
										<linksource>true</linksource>
										<links>
											<link>http://download.oracle.com/javase/6/docs/api/</link>
											<link>http://download.oracle.com/javaee/6/api/</link>
											<link>http://kentbeck.github.com/junit/javadoc/latest/</link>
										</links>
										-->
										
										<packagesheader>Packages des Webshops</packagesheader>
										<doctitle>Softwarearchitektur: Version ${project.version}</doctitle>
										<windowtitle>Softwarearchitektur: Version ${project.version}</windowtitle>
										<bottom>Copyright &#169; ${project.inceptionYear}-${currentYear} Hochschule Karlsruhe - Informatik und Wirtschaftsinformatik. All Rights Reserved.</bottom>
										
										<outputName>Surefire Bericht</outputName>
									</configuration>
								</plugin>
								
								<!-- Generierung der HTML-Seiten mit Java-Quellcode und Querverweisen -->
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-jxr-plugin</artifactId>
									<version>${maven-jxr-plugin.version}</version>
								</plugin>
								
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>taglist-maven-plugin</artifactId>
									<version>${taglist-maven-plugin}</version>
									<configuration>
										<tagListOptions>
											<tagClasses>
												<tagClass>
													<displayName>Todo Liste</displayName>
													<tags>
														<tag>
															<matchString>TODO</matchString>
															<matchType>ignoreCase</matchType>
														</tag>
														<tag>
															<matchString>FIXME</matchString>
															<matchType>ignoreCase</matchType>
														</tag>
													</tags>
												</tagClass>
											</tagClasses>
										</tagListOptions>
									</configuration>
								</plugin>
						
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>findbugs-maven-plugin</artifactId>
									<version>${findbugs-maven-plugin.version}</version>
									<configuration>
										<effort>Max</effort>
										<xmlOutput>true</xmlOutput>
										<findbugsXmlOutputDirectory>${project.build.directory}/site</findbugsXmlOutputDirectory>
										<maxHeap>${findBugs.maxHeap}</maxHeap>
										<excludeFilterFile>${basedir}/src/test/resources/findbugs.xml</excludeFilterFile>
									</configuration>
								</plugin>
								
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-pmd-plugin</artifactId>
									<version>${maven-pmd-plugin.version}</version>
									<configuration>
										<targetJdk>${java.version}</targetJdk>
										<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
										<linkXref>true</linkXref>
										<includeTests>true</includeTests>
										<!-- 100 Tokens entsprechen 5-10 Zeilen Quellcode bzgl CPD = Copy-Paste-Detection -->
										<minimumTokens>100</minimumTokens>
										
										<rulesets>
											<!-- Konfigurationsdatei fuer PMD einschl. CPD -->
											<ruleset>/src/test/resources/pmd.xml</ruleset>
										</rulesets>
										<excludes>
											<exclude>**/UAgentInfo.java</exclude>
											<exclude>src/test/java/**/ObjectFactory.java</exclude>
										</excludes>
									</configuration>
								</plugin>
								
								<plugin>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-checkstyle-plugin</artifactId>
									<version>${maven-checkstyle-plugin.version}</version>
									
									<configuration>
										<configLocation>${basedir}/src/test/resources/checkstyle.xml</configLocation>
										<includeTestSourceDirectory>true</includeTestSourceDirectory>
										<excludes>**/util/rest/*/*.java,**/UAgentInfo.java</excludes>
										<violationSeverity>warning</violationSeverity>
									</configuration>
								</plugin>
								
								<plugin>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>versions-maven-plugin</artifactId>
									<version>${versions-maven-plugin.version}</version>
								</plugin>
							</reportPlugins>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${versions-maven-plugin.version}</version>
					</plugin>
		
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven-clean-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven-jar-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>${maven-install-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>${maven-deploy-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>oracle</id>

			<properties>
				<driver>oracle.jdbc.OracleDriver</driver>
				<dbUrl>jdbc:oracle:thin:@localhost:1521:XE</dbUrl>
				<logdir>${basedir}/target/oracle-sqlldr</logdir>
			</properties>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>${sql-maven-plugin.version}</version>
		
						<!-- JDBC Treiber -->
						<dependencies>
							<dependency>
								<groupId>com.oracle</groupId>
								<artifactId>ojdbc6</artifactId>
								<version>${oracle.driver.version}</version>
							</dependency>
						</dependencies>
		
						<!-- Gemeinsame Konfiguration fuer alle Aufrufe -->
						<configuration>
							<driver>${driver}</driver>
							<url>${dbUrl}</url>
							<username>SYSTEM</username>
							<password>${admin.oracle.password}</password>
						</configuration>
						
						<executions>
							<execution>
								<id>validate</id>
								<phase>validate</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<sqlCommand>
										SELECT 1 FROM dual;
									</sqlCommand>
								</configuration>
							</execution>
							
							<execution>
								<id>create-user</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<!-- CREATE USER kann beim wiederholten Aufruf nicht mehr funktionieren -->
									<onError>continue</onError>
									<sqlCommand>
										CREATE USER ${user.oracle} IDENTIFIED BY ${user.oracle.password} DEFAULT TABLESPACE USERS;
										GRANT CONNECT TO ${user.oracle};
									</sqlCommand>
								</configuration>
							</execution>
		
							<execution>
								<id>generate-drop-tables</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<username>${user.oracle}</username>
									<password>${user.oracle.password}</password>
									<sqlCommand>
										SELECT 'DROP SEQUENCE '||sequence_name||';' FROM user_sequences;
										SELECT 'DROP TABLE '||table_name||' CASCADE CONSTRAINTS PURGE;' FROM user_tables;
									</sqlCommand>
									<printResultSet>true</printResultSet>
									<outputFile>${sqlsrc.dir.oracle}/drop-tables-sequences.generated.sql</outputFile>
								</configuration>
							</execution>
							
							<execution>
								<id>grant</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<sqlCommand>
										GRANT CONNECT TO ${user.oracle};
										GRANT RESOURCE TO ${user.oracle};
									</sqlCommand>
								</configuration>
							</execution>
		
							<execution>
								<id>create-schema</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<!-- Anwendungsuser wird Owner des Schemas -->
									<username>${user.oracle}</username>
									<password>${user.oracle.password}</password>
									<sqlCommand>
										CREATE SCHEMA AUTHORIZATION ${user.oracle};
									</sqlCommand>
								</configuration>
							</execution>

							<execution>
								<id>drop-tables-and-sequences</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<username>${user.oracle}</username>
									<password>${user.oracle.password}</password>
									<onError>continue</onError>
									<srcFiles>
										<srcFile>${sqlsrc.dir.oracle}/drop-tables-sequences.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
							<execution>
								<id>create-tables-and-sequences</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<!-- Anwendungsuser wird Owner der Anwendungs-Tabellen -->
									<username>${user.oracle}</username>
									<password>${user.oracle.password}</password>
									<enableFiltering>true</enableFiltering>
									<srcFiles>
										<srcFile>${sqlsrc.dir.oracle}/create-tables-sequences.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
							
							<execution>
								<id>create-trigger</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<username>${user.oracle}</username>
									<password>${user.oracle.password}</password>
									<!-- ";" in separater Zeile, weil ";" innerhalb von Trigger-Anweisungen benoetigt wird -->
									<delimiterType>row</delimiterType>
									<srcFiles>
										<srcFile>${sqlsrc.dir.oracle}/create-trigger.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
							
							<execution>
								<id>revoke</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<sqlCommand>
										REVOKE RESOURCE FROM ${user.oracle};
									</sqlCommand>
								</configuration>
							</execution>
							
							<execution>
								<id>drop-database-and-user</id>
								<phase>clean</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								
								<configuration>
									<!-- DROP ... kann beim wiederholten Aufruf nicht mehr funktionieren -->
									<onError>continue</onError>
									<sqlCommand>
										DROP USER ${user.oracle} CASCADE;
									</sqlCommand>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						
						<configuration>
							<executable>sqlldr.exe</executable>
							<workingDirectory>${test.dir.oracle}</workingDirectory>
						</configuration>
						
						<executions>
							<execution>
								<id>load-kunde</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${sqlldr.userid}</argument>
										<argument>control=kunde</argument>
										<argument>log=${logdir}/kunde</argument>
										<argument>data=kunde</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-adresse</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=adresse</argument>
										<argument>log=${logdir}/adresse</argument>
										<argument>data=adresse</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-bestellung</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=bestellung</argument>
										<argument>log=${logdir}/bestellung</argument>
										<argument>data=bestellung</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-artikel</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=artikel</argument>
										<argument>log=${logdir}/artikel</argument>
										<argument>data=artikel</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-bestellposition</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=bestellposition</argument>
										<argument>log=${logdir}/bestellposition</argument>
										<argument>data=bestellposition</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-lieferung</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=lieferung</argument>
										<argument>log=${logdir}/lieferung</argument>
										<argument>data=lieferung</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-bestellung-lieferung</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=bestellung_lieferung</argument>
										<argument>log=${logdir}/bestellung_lieferung</argument>
										<argument>data=bestellung_lieferung</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>load-artikelgruppe</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>userid=${user.oracle}/${user.oracle.password}@XE</argument>
										<argument>control=artikelgruppe</argument>
										<argument>log=${logdir}/artikelgruppe</argument>
										<argument>data=artikelgruppe</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						
						<executions>
							<execution>
								<id>print-config</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Maven Properties:"/>
										<echo message="   env.COMPUTERNAME  = ${env.COMPUTERNAME}"/>
										<echo message="   sqlsrc.dir.oracle = ${sqlsrc.dir.oracle}"/>
										<echo message="   test.dir.oracle   = ${test.dir.oracle}"/>
										<echo message=""/>
										
										<mkdir dir="${logdir}"/>
										<delete verbose="true">
											<fileset dir="${sqlsrc.dir.oracle}" includes="*.bad"/>
										</delete>
									</target>
								</configuration>
							</execution>

							<execution>
								<id>delete-files</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
		
								<configuration>
									<target>
										<delete file="${basedir}/${sqlsrc.dir.oracle}/drop-tables-sequences.generated.sql"/>
										<delete file="${datasets.dir}/db.dtd"/>
										<delete file="${datasets.dir}/db.xml"/>										
										<delete verbose="true">
											<fileset dir="${sqlsrc.dir.oracle}" includes="*.bad"/>
										</delete>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
		
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<version>${dbunit-maven-plugin.version}</version>
						
						<dependencies>
							<dependency>
								<groupId>com.oracle</groupId>
								<artifactId>ojdbc6</artifactId>
								<version>${oracle.driver.version}</version>
							</dependency>
						</dependencies>
						
						<configuration>
							<driver>${driver}</driver>
							<url>${dbUrl}</url>
							<username>${user.oracle}</username>
							<password>${user.oracle.password}</password>
							<schema>${user.oracle}</schema>
							<dataTypeFactoryName>org.dbunit.ext.oracle.Oracle10DataTypeFactory</dataTypeFactoryName>
							<ordered>true</ordered>
							<datatypeWarning>true</datatypeWarning>
							<supportBatchStatement>true</supportBatchStatement>
							<skipOracleRecycleBinTables>true</skipOracleRecycleBinTables>
						</configuration>
						
						<executions>
							<execution>
								<id>export-dtd</id>
								<phase>test</phase>
								<goals>
									<goal>export</goal>
								</goals>
		
								<configuration>
									<format>dtd</format>
									<dest>${datasets.dir}/db.dtd</dest>
								</configuration>
							</execution>
		
							<execution>
								<id>export-flat-xml</id>
								<phase>test</phase>
								<goals>
									<goal>export</goal>
								</goals>
		
								<configuration>
									<format>flat</format>
									<doctype>db.dtd</doctype>
									<dest>${datasets.dir}/db.xml</dest>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
		    			<artifactId>maven-surefire-plugin</artifactId>
		    			<version>${maven-surefire-plugin.version}</version>
						
						<configuration>
							<!-- Keine JUnit-Tests --> 
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>			
		</profile>
		
		<profile>
			<id>jmeter</id>			
			<build>
				<plugins>
					<plugin>
						<groupId>com.lazerycode.jmeter</groupId>
						<artifactId>jmeter-maven-plugin</artifactId>
						<version>${jmeter-maven-plugin.version}</version>
						<configuration>
							<testFilesIncluded>
								<jMeterTestFile>*.jmx</jMeterTestFile>
							</testFilesIncluded>
						</configuration>
						
						<executions>
							<execution>
								<id>jmeter-tests</id>
								<phase>verify</phase>
								<goals>
									<goal>jmeter</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>			
		</profile>
		
		<profile>
			<id>restgen</id>
			
			<properties>
				<!-- Verzeichnis fuer XML Schema fuer JAX-RS -->
				<xml.schema.dir>${basedir}/src/main/resources/schema</xml.schema.dir>
				<!-- Generierte JAXB-Klassen fuer Tests zu JAX-RS -->
				<test.jaxrs.package>de.shop.util.rest.</test.jaxrs.package>
				<test.jaxrs.dir>${basedir}/src/test/java</test.jaxrs.dir>
				<test.jaxrs.package.dir>${test.jaxrs.dir}/de/shop/util/rest/</test.jaxrs.package.dir>
			</properties>
			
			<repositories>
				<repository>
					<id>jboss</id>
					<name>JBoss Maven 2 Repository</name>
					<url>https://repository.jboss.org/nexus/content/groups/public</url>
				</repository>
			</repositories>
		
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.jboss.resteasy</groupId>
						<artifactId>resteasy-bom</artifactId>
						<version>${resteasy-bom.version}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			
			<dependencies>
				<dependency>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
	
						<dependencies>
							<dependency>
								<groupId>com.sun</groupId>
								<artifactId>tools</artifactId>
								<version>${java.version}</version>
								<scope>system</scope>
								<systemPath>${java.home}/../lib/tools.jar</systemPath>
							</dependency>
							<dependency>
								<groupId>com.sun.xml.bind</groupId>
								<artifactId>jaxb-xjc</artifactId>
								<version>${jaxb.version}</version>
							</dependency>
							<dependency>
								<groupId>com.sun.xml.bind</groupId>
								<artifactId>jaxb-impl</artifactId>
								<version>${jaxb.version}</version>
							</dependency>
						</dependencies>
						
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Maven Properties:"/>
										<echo message="   env.COMPUTERNAME       = ${env.COMPUTERNAME}"/>
										<echo message="   xml.schema.dir         = ${xml.schema.dir}"/>
										<echo message="   test.jaxrs.package     = ${test.jaxrs.package}"/>
										<echo message="   test.jaxrs.package.dir = ${test.jaxrs.package.dir}"/>
										<echo message=""/>
									</target>
								</configuration>
							</execution>

							<execution>
								<id>generate-xml-schema</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
		
								<configuration>
									<target>
										<mkdir dir="${xml.schema.dir}"/>
										<taskdef name="schemagen" classname="com.sun.tools.jxc.SchemaGenTask"/>
										
										<path id="schemagen.classpath">
											<fileset dir="${env.JBOSS_HOME}/modules">
												<include name="javax/persistence/api/main/*.jar"/>
												<include name="javax/validation/api/main/*.jar"/>
												<include name="org/hibernate/validator/main/*.jar"/>
											</fileset>
										</path>
										
										<schemagen destdir="${xml.schema.dir}"
										           verbose="true"
										           includeantruntime="false"
										           classpathref="schemagen.classpath">

											<src path="${basedir}/src/main/java"/>
											
											<!-- Es muessen nicht alle Klassen aufgezaehlt werden. -->
											<!-- "schemagen" ermittelt automatisch die referenzierten Klassen. -->
											<include name="de/shop/artikelverwaltung/domain/package-info.java"/>
											<include name="de/shop/artikelverwaltung/domain/Artikel.java"/>
									
											<include name="de/shop/bestellverwaltung/domain/package-info.java"/>
									
											<include name="de/shop/kundenverwaltung/domain/package-info.java"/>
											<include name="de/shop/kundenverwaltung/domain/Firmenkunde.java"/>
											<include name="de/shop/kundenverwaltung/domain/Privatkunde.java"/>
											
											<include name="de/shop/bestellverwaltung/domain/package-info.java"/>
											<include name="de/shop/bestellverwaltung/domain/Bestellung.java"/>
											
											<schema namespace="urn:shop:kundenverwaltung" file="kundenverwaltung.xsd"/>
											<schema namespace="urn:shop:bestellverwaltung" file="bestellverwaltung.xsd"/>
											<schema namespace="urn:shop:artikelverwaltung" file="artikelverwaltung.xsd"/>
										</schemagen>
										
										<loadfile property="xsd.string" srcFile="${xml.schema.dir}/kundenverwaltung.xsd"/>
										<fail message="Die generierte XSD-Schemadatei 'kundenverwaltung.xsd' enthaelt 'xs:anyType' und ist deshalb NICHT KORREKT">
											<condition>
												<contains string="${xsd.string}" substring="xs:anyType"/>
											</condition>
										</fail>
										
										<loadfile property="xsd.string" srcFile="${xml.schema.dir}/bestellverwaltung.xsd"/>
										<fail message="Die generierte XSD-Schemadatei 'bestellverwaltung.xsd' enthaelt 'xs:anyType' und ist deshalb NICHT KORREKT">
											<condition>
												<contains string="${xsd.string}" substring="xs:anyType"/>
											</condition>
										</fail>
										
										<loadfile property="xsd.string" srcFile="${xml.schema.dir}/artikelverwaltung.xsd"/>
										<fail message="Die generierte XSD-Schemadatei 'artikelverwaltung.xsd' enthaelt 'xs:anyType' und ist deshalb NICHT KORREKT">
											<condition>
												<contains string="${xsd.string}" substring="xs:anyType"/>
											</condition>
										</fail>
										
										<echo message=' '/>
										<echo message='Refresh [F5] fuer das Web-Projekt durchfuehren:'/>
										<echo message='xsd-Dateien sind im Unterverzeichnis "src/main/resources/schema"'/>
									</target>
								</configuration>
							</execution>
							
							<execution>
								<id>generate-jaxb-classes</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
		
								<configuration>
									<target>
										<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask"/>

										<path id="xjc.classpath">
											<fileset dir="${env.JBOSS_HOME}/modules">
												<include name="javax/xml/bind/api/main/*.jar"/>
											</fileset>
										</path>

										<xjc destdir="${test.jaxrs.dir}"
											 schema="${xml.schema.dir}/kundenverwaltung.xsd"
											 package="${test.jaxrs.package}kundenverwaltung"
											 extension="true">
											<classpath>
												<fileset dir="${env.JBOSS_HOME}/modules">
													<include name="javax/xml/bind/api/main/*.jar"/>
													<exclude name="javax/xml/bind/api/main/*-jandex.jar"/>
												</fileset>
											</classpath>
											<produces dir="${test.jaxrs.package.dir}kundenverwaltung" includes="*" />
										</xjc>
										
										<xjc destdir="${test.jaxrs.dir}"
											 schema="${xml.schema.dir}/bestellverwaltung.xsd"
											 package="${test.jaxrs.package}bestellverwaltung"
											 extension="true">
											<classpath>
												<fileset dir="${env.JBOSS_HOME}/modules">
													<include name="javax/xml/bind/api/main/*.jar"/>
													<exclude name="javax/xml/bind/api/main/*-jandex.jar"/>
												</fileset>
											</classpath>
											<produces dir="${test.jaxrs.package.dir}bestellverwaltung" includes="*" />
										</xjc>
										
										<xjc destdir="${test.jaxrs.dir}"
											 schema="${xml.schema.dir}/artikelverwaltung.xsd"
											 package="${test.jaxrs.package}artikelverwaltung"
											 extension="true">
											<classpath>
												<fileset dir="${env.JBOSS_HOME}/modules">
													<include name="javax/xml/bind/api/main/*.jar"/>
													<exclude name="javax/xml/bind/api/main/*-jandex.jar"/>
												</fileset>
											</classpath>
											<produces dir="${test.jaxrs.package.dir}artikelverwaltung" includes="*" />
										</xjc>
									
										<echo message=' '/>
										<echo message='Refresh [F5] fuer das Maven-Projekt durchfuehren:'/>
										<echo message='Generierte JAXB-Dateien sind im Unterverzeichnis "${test.jaxrs.package.dir}"'/>
									</target>
								</configuration>
							</execution>
							
							<execution>
								<id>delete-files</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
		
								<configuration>
									<target>
										<delete dir="${xml.schema.dir}"/>
										<delete dir="${test.jaxrs.package.dir}"/>										
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
		    			<artifactId>maven-surefire-plugin</artifactId>
		    			<version>${maven-surefire-plugin.version}</version>
						
						<configuration>
							<!-- Keine JUnit-Tests --> 
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>jbehave</id>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven-jxr-plugin.version}</version>
					</plugin>
		
					<plugin>
						<groupId>org.jbehave</groupId>
						<artifactId>jbehave-maven-plugin</artifactId>
						<version>${jbehave.version}</version>
						<executions>
							<execution>
								<id>run-stories</id>
								<phase>test</phase>
								
								<configuration>
									<includes>
										<include>${stories}</include>
									</includes>
									<metaFilters>
										<metaFilter>+author *</metaFilter>
									</metaFilters>
									<systemProperties>
										<property>
											<name>java.awt.headless</name>
											<value>true</value>
										</property>
										
										<property>
											<name>webdriver.firefox.bin</name>
											<value>${firefox.bin}</value>
										</property>
										<property>
											<name>webdriver.chrome.driver</name>
											<value>${chrome.bin}</value>
										</property>
										<property>
											<name>browser</name>
											<value>${browser}</value>
										</property>								
									</systemProperties>
									
									<scope>test</scope>
									<ignoreFailureInStories>true</ignoreFailureInStories>
									<ignoreFailureInView>false</ignoreFailureInView>
								</configuration>
								
								<goals>
									<goal>run-stories-as-embeddables</goal>
								</goals>
							</execution>
						</executions>
						
						<dependencies>
							<dependency>
								<groupId>log4j</groupId>
								<artifactId>log4j</artifactId>
								<version>${log4j.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
				    	<artifactId>maven-surefire-plugin</artifactId>
				    	<version>${maven-surefire-plugin.version}</version>
						
						<configuration>
							<!-- Keine JUnit-Tests --> 
							<skip>true</skip>
						</configuration>
					</plugin>
					
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven-surefire-report-plugin.version}</version>
						
						<configuration>
							<showSuccess>true</showSuccess>
							<inputEncoding>UTF-8</inputEncoding>
							<outputEncoding>UTF-8</outputEncoding>
						</configuration>
				
						<executions>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
		
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
					</plugin>
		
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>${maven-site-plugin.version}</version>
						<configuration>
							<locales>de</locales>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${versions-maven-plugin.version}</version>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven-clean-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven-jar-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>${maven-install-plugin.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>${maven-deploy-plugin.version}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
				
				<testResources>
					<testResource>
						<directory>src/test/java</directory>
						<includes>
							<include>**/*.story</include>
						</includes>
					</testResource>
					<testResource>
						<directory>src/test/resources</directory>
					</testResource>
				</testResources>
			</build>
			
			<reporting>
				<plugins>
					<plugin>
						<!-- Generierung der HTML-Seiten mit Java-Quellcode und Querverweisen -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${maven-jxr-plugin.version}</version>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
</project>
